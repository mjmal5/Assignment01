const TOKEN = "pk.eyJ1IjoibWFsY29sbW1hbGxveSIsImEiOiJjazF4NTgyemwwMHNoM2NudXlvaGZjMGcyIn0.ZmWeh2cCSVDhLG3Z5hbYJg"; var locations = []; $(document).ready(function () { $(".map-remove tr").length <= 1 && ($(".map-container").hide(), $(".map-missing").show()) }), $(".coordinates").each(function () { var o = $(".longitude", this).text().trim(), e = { latitude: $(".latitude", this).text().trim(), longitude: o, description: $(".description", this).text().trim() }; locations.push(e) }); var data = []; for (i = 0; i < locations.length; i++) { var feature = { type: "Feature", properties: { description: locations[i].description, icon: "circle-15" }, geometry: { type: "Point", coordinates: [locations[i].longitude, locations[i].latitude] } }; data.push(feature) } mapboxgl.accessToken = TOKEN; var map = new mapboxgl.Map({ container: "map", style: "mapbox://styles/mapbox/streets-v10", zoom: 11, center: [locations[0].longitude, locations[0].latitude] }); map.addControl(new mapboxgl.NavigationControl), map.addControl(new MapboxDirections({ accessToken: mapboxgl.accessToken }), "top-left"), map.on("load", function () { map.addLayer({ id: "places", type: "symbol", source: { type: "geojson", data: { type: "FeatureCollection", features: data } }, layout: { "icon-image": "{icon}", "icon-allow-overlap": !0 } }), map.addControl(new MapboxGeocoder({ accessToken: mapboxgl.accessToken })), map.addControl(new mapboxgl.NavigationControl), map.on("click", "places", function (o) { for (var e = o.features[0].geometry.coordinates.slice(), a = o.features[0].properties.description; Math.abs(o.lngLat.lng - e[0]) > 180;)e[0] += o.lngLat.lng > e[0] ? 360 : -360; (new mapboxgl.Popup).setLngLat(e).setHTML(a).addTo(map) }), map.on("mouseenter", "places", function () { map.getCanvas().style.cursor = "pointer" }), map.on("mouseleave", "places", function () { map.getCanvas().style.cursor = "" }) });